[client]
port	= $--instance-ports
socket	= $--data-prefix/mysql$--instance-ports/mysql$--instance-ports.sock
[mysql]
prompt="\u@\h[\d]> "
no-auto-rehash
[mysqld]
user                                   = $--mysql-user
port                                   = $--instance-ports
basedir                                = $--base-prefix
datadir	                               = $--data-prefix/mysql$--instance-ports/data
socket                                 = $--data-prefix/mysql$--instance-ports/mysql$--instance-ports.sock
pid_file                               = $--log-prefix/mysql$--instance-ports/mysql$--instance-ports.pid
mysqlx_port                            = 1$--instance-ports
mysqlx_socket                          = $--data-prefix/mysql$--instance-ports/mysqlx1$--instance-ports.sock
# MySQL服务器的唯一标识，用于复制和集群。
server_id                              = $--server-id$--instance-ports
# 服务器字符集设置为utf8mb4，支持存储多语言字符。
character-set-server                   = utf8mb4
# 服务器排序规则设置为utf8mb4_unicode_ci，用于字符串比较和排序。
collation-server                       = utf8mb4_unicode_ci
# 禁用客户端握手时的字符集验证，提高连接效率。
character-set-client-handshake         = FALSE
# 默认的身份验证插件设置为'mysql_native_password'，与旧版MySQL兼容。
default_authentication_plugin          = 'mysql_native_password'
# 临时文件目录路径，用于存储临时数据文件。
tmpdir                                 = $--data-prefix/mysql$--instance-ports/mysqltmp
# 日志中使用系统时间戳。
log_timestamps                         = SYSTEM
# 错误日志文件路径。
log_error                              = $--log-prefix/mysql$--instance-ports/error.log
# 错误日志的详细程度，2表示详细信息。
log_error_verbosity                    = 2
# 启用慢查询日志记录。
slow_query_log                         = 1
# 慢查询日志文件路径。
slow_query_log_file                    = $--log-prefix/mysql$--instance-ports/slowlogs/mysql_slow.log
# 定义慢查询的时间阈值，单位为秒。
long_query_time                        = 1
# 启用一般查询日志记录。
general_log_file                       = $--log-prefix/mysql$--instance-ports/mysql_gene.log
# 安全文件目录，用于加载和存储安全文件。
secure_file_priv                       = $--data-prefix/mysql$--instance-ports/filedir
# 禁用本地文件加载功能。
local_infile                           = 0
# 禁用事件调度器。
event_scheduler                        = off
# 用户登录时激活所有角色。
activate_all_roles_on_login            = 1
# InnoDB打印DDL操作的日志。
innodb_print_ddl_logs                  = 1
# 打开文件数限制。
open_files_limit                       = 65535
# 线程缓存大小。
thread_cache_size                      = 3000
# 表缓存大小。
table_open_cache                       = 1024
# 表定义缓存大小。
table_definition_cache                 = 1024
# 表缓存实例数。
table_open_cache_instances             = 64
# 线程栈大小。
thread_stack                           = 512K
# 禁用外部锁定。
external-locking                       = FALSE
# 排序缓冲区大小。
sort_buffer_size                       = 4M
# 连接使用的缓冲区大小。
join_buffer_size                       = 4M
# 线程缓存大小。
thread_cache_size                      = 5000
# 临时表大小限制。
tmp_table_size                         = 32M
# 最大堆内存临时表大小限制。
max_heap_table_size                    = 32M
# 键缓冲区大小。
key_buffer_size                        = 32M
# 读取缓冲区大小。
read_buffer_size                       = 8M
# 随机读取缓冲区大小。
read_rnd_buffer_size                   = 4M
# 批量插入缓冲区大小。
bulk_insert_buffer_size                = 64M
# 锁等待超时时间，单位为秒。
lock_wait_timeout                      = 3600
# 表名是否区分大小写，1表示不区分大小写。
lower_case_table_names                 = 1
# 启用显式的时间戳默认值。
explicit_defaults_for_timestamp        = 1
#innodb
# InnoDB线程并发设置为0，表示自动根据CPU核心数配置。
innodb_thread_concurrency              = 0
# InnoDB同步自旋等待次数。
innodb_sync_spin_loops                 = 100
# InnoDB自旋等待延迟时间，单位为毫秒。
innodb_spin_wait_delay                 = 30
# 事务隔离级别设置为READ-COMMITTED。
transaction_isolation                  = READ-COMMITTED
# InnoDB缓冲池大小。
innodb_buffer_pool_size                = $--innodb-buffer-pool-size
# 服务器启动时加载InnoDB缓冲池。
innodb_buffer_pool_load_at_startup     = 1
# 服务器关闭时将InnoDB缓冲池内容dump到磁盘。
innodb_buffer_pool_dump_at_shutdown    = 1
# InnoDB数据文件路径和大小。
innodb_data_file_path                  = ibdata1:1G:autoextend
# InnoDB日志缓冲区大小。
innodb_log_buffer_size                 = 32M
# InnoDB日志文件大小。
innodb_log_file_size                   = 2G
# InnoDB日志文件组数。
innodb_log_files_in_group              = 2
# InnoDB最大撤销日志大小。
innodb_max_undo_log_size               = 4G
#--- REPL ---#
# 启用二进制日志。
log_bin                                = $--log-prefix/mysql$--instance-ports/binlogs/mysql_bin
# 在二进制日志中记录行级查询日志事件。
binlog_rows_query_log_events           = ON
# 二进制日志过期时间，单位为秒。
binlog_expire_logs_seconds             = 2592000
# 启用二进制日志校验和。
binlog_checksum                        = 1
# 二进制日志格式设置为行级格式。
binlog_format                          = row
# 二进制日志缓存大小。
binlog_cache_size                      = 4M
# 最大二进制日志缓存大小。
max_binlog_cache_size                  = 2G
# 单个二进制日志文件大小。
max_binlog_size                        = 1G
min_examined_row_limit                 = 0
log_slow_admin_statements              = 1
log_slow_slave_statements              = 1
# 查询超出索引的记录时记录慢查询。
log_queries_not_using_indexes          = 0
# 记录从服务器的更新事件。
log_slave_updates
# 主服务器信息存储方式设置为表。
master_info_repository                 = TABLE
# 中继日志信息存储方式设置为表。
relay_log_info_repository              = TABLE
# 跳过从服务器启动同步。
skip_slave_start
#--gtid
# 启用GTID（全局事务标识）模式。
gtid_mode                              = ON
# 强制执行GTID一致性。
enforce_gtid_consistency               = 1
#--- flush disk ---#
# 事务提交时刷新日志到磁盘。
innodb_flush_log_at_trx_commit         = 1
# 同步二进制日志刷新到磁盘。
sync_binlog                            = 1
#--relay_log
# 中继日志文件路径。
relay_log                              = $--log-prefix/mysql$--instance-ports/relaylogs/mysql_relay_bin
# 中继日志恢复。
relay_log_recovery                     = 1
# 清理中继日志。
relay_log_purge                        = 1
#--- NETWORK ---#
# 最大允许的数据包大小。
max_allowed_packet                     = 128M
# 最大等待连接数。
back_log                               = 1024
# 交互式超时时间。
interactive_timeout                    = 3600
# 等待连接超时时间。
wait_timeout                           = 3600
# 最大连接数。
max_connections                        = 5000
# 禁用DNS解析。
skip_name_resolve                      = 1
# 最大连接错误次数。
max_connect_errors                     = 1000000
#--并行复制
# 并行复制依赖跟踪设置为WriteSet。
loose-binlog_transaction_dependency_tracking      = WriteSet
# 并行复制依赖历史大小限制。
loose-binlog_transaction_dependency_history_size  = 1000000
# 事务写集抽取方法设置为XXHASH64。
loose-transaction_write_set_extraction            = XXHASH64
# 并行复制类型设置为LOGICAL_CLOCK。
slave_parallel_type                               = LOGICAL_CLOCK
# 并行复制工作线程数。
slave_parallel_workers                            = 8
# 根据服务器IOPS能力适当调整以下参数，设置硬盘性能相关。
# 一般SSD盘调整到 10000 - 20000，高端PCIe SSD卡可以调整更高。
innodb_io_capacity = 4000
innodb_io_capacity_max = 8000
innodb_flush_sync = 0
innodb_flush_neighbors = 0
innodb_write_io_threads = 8
innodb_read_io_threads = 8
innodb_purge_threads = 4
innodb_page_cleaners = 4
innodb_open_files = 65535
innodb_max_dirty_pages_pct = 50
innodb_flush_method = O_DIRECT
innodb_lru_scan_depth = 4000
innodb_checksum_algorithm = crc32
innodb_lock_wait_timeout = 10
innodb_rollback_on_timeout = 1
innodb_print_all_deadlocks = 1
innodb_file_per_table = 1
innodb_online_alter_log_max_size = 4G
innodb_stats_on_metadata = 0
# 启用InnoDB状态文件记录。
innodb_status_file = 1
# 开启InnoDB状态输出，可能导致日志文件增长。
innodb_status_output = 0
innodb_status_output_locks = 0
# 启用性能模式。
performance_schema = 1
# 启用性能模式的详细信息。
performance_schema_instrument = '%=on'
# 启用InnoDB监控模块。
innodb_monitor_enable="module_innodb"
innodb_monitor_enable="module_server"
innodb_monitor_enable="module_dml"
innodb_monitor_enable="module_ddl"
innodb_monitor_enable="module_trx"
innodb_monitor_enable="module_os"
innodb_monitor_enable="module_purge"
innodb_monitor_enable="module_log"
innodb_monitor_enable="module_lock"
innodb_monitor_enable="module_buffer"
innodb_monitor_enable="module_index"
innodb_monitor_enable="module_ibuf_system"
innodb_monitor_enable="module_buffer_page"
innodb_monitor_enable="module_adaptive_hash"
# 允许函数创建者执行二进制日志写入。
log_bin_trust_function_creators = 1
[mysqldump]
quick